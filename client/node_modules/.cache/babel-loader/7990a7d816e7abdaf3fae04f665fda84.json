{"ast":null,"code":"var _jsxFileName = \"/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/application/customer/ProductReview/ReviewEdit.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport React from 'react'; // material-ui\n\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem, Rating, TextField, Typography } from '@material-ui/core'; // project imports\n\nimport { gridSpacing } from 'store/constant';\nimport AnimateButton from 'ui-component/extended/AnimateButton'; // style constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  reviewDialog: {\n    '&>div:nth-child(3)': {\n      '&>div': {\n        maxWidth: '400px'\n      }\n    }\n  },\n  reviewContainer: {\n    marginTop: '0px',\n    marginBottom: '0px'\n  }\n}); // review state options\n\nconst reviewState = [{\n  value: '1',\n  label: 'Published'\n}, {\n  value: '2',\n  label: 'Pending'\n}, {\n  value: '3',\n  label: 'confirm'\n}];\n\nconst ReviewEdit = ({\n  open,\n  handleCloseDialog\n}) => {\n  _s();\n\n  const classes = useStyles(); // handle review status change\n\n  const [currency, setCurrency] = React.useState('1');\n\n  const handleSelectChange = event => {\n    setCurrency(event.target.value);\n  }; // handle star rating\n\n\n  const [value, setValue] = React.useState(2);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleCloseDialog,\n      className: classes.reviewDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: gridSpacing,\n          className: classes.reviewContainer,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic-review-product\",\n              fullWidth: true,\n              label: \"Product \",\n              defaultValue: \"Apple Watch Series 4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic-review-author\",\n              fullWidth: true,\n              label: \"Author \",\n              defaultValue: \"Joseph William\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic-review\",\n              fullWidth: true,\n              multiline: true,\n              rows: 4,\n              label: \"Text of review\",\n              defaultValue: \"If you're coming from a Series 3, the choice is more difficult. The Series 4 is undoubtedly the better device. And if you care about fall detection, the ECG app, or a larger screen then upgrading makes sense. But I think most people will remain satisfied with their Series 3s.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"left\",\n              component: \"div\",\n              variant: \"body2\",\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"simple-controlled\",\n              value: value,\n              precision: 0.5,\n              onChange: (event, newValue) => {\n                setValue(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"standard-select-currency\",\n              select: true,\n              label: \"Status\",\n              value: currency,\n              fullWidth: true,\n              onChange: handleSelectChange,\n              children: reviewState.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(AnimateButton, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: handleCloseDialog,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ReviewEdit, \"AY72blmPjFfe2joWUJnoPM3BVjw=\", false, function () {\n  return [useStyles];\n});\n\n_c = ReviewEdit;\nReviewEdit.propTypes = {\n  open: PropTypes.bool,\n  handleCloseDialog: PropTypes.func\n};\nexport default ReviewEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewEdit\");","map":{"version":3,"sources":["/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/application/customer/ProductReview/ReviewEdit.js"],"names":["PropTypes","React","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","Grid","MenuItem","Rating","TextField","Typography","gridSpacing","AnimateButton","useStyles","reviewDialog","maxWidth","reviewContainer","marginTop","marginBottom","reviewState","value","label","ReviewEdit","open","handleCloseDialog","classes","currency","setCurrency","useState","handleSelectChange","event","target","setValue","newValue","map","option","propTypes","bool","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    MenuItem,\r\n    Rating,\r\n    TextField,\r\n    Typography\r\n} from '@material-ui/core';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    reviewDialog: {\r\n        '&>div:nth-child(3)': {\r\n            '&>div': {\r\n                maxWidth: '400px'\r\n            }\r\n        }\r\n    },\r\n    reviewContainer: {\r\n        marginTop: '0px',\r\n        marginBottom: '0px'\r\n    }\r\n});\r\n\r\n// review state options\r\nconst reviewState = [\r\n    {\r\n        value: '1',\r\n        label: 'Published'\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Pending'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'confirm'\r\n    }\r\n];\r\n\r\nconst ReviewEdit = ({ open, handleCloseDialog }) => {\r\n    const classes = useStyles();\r\n\r\n    // handle review status change\r\n    const [currency, setCurrency] = React.useState('1');\r\n    const handleSelectChange = (event) => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    // handle star rating\r\n    const [value, setValue] = React.useState(2);\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={open} onClose={handleCloseDialog} className={classes.reviewDialog}>\r\n                <DialogTitle>Edit Review</DialogTitle>\r\n                <DialogContent>\r\n                    <Grid container spacing={gridSpacing} className={classes.reviewContainer}>\r\n                        <Grid item xs={12}>\r\n                            <TextField id=\"outlined-basic-review-product\" fullWidth label=\"Product \" defaultValue=\"Apple Watch Series 4\" />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField id=\"outlined-basic-review-author\" fullWidth label=\"Author \" defaultValue=\"Joseph William\" />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"outlined-basic-review\"\r\n                                fullWidth\r\n                                multiline\r\n                                rows={4}\r\n                                label=\"Text of review\"\r\n                                defaultValue=\"If you're coming from a Series 3, the choice is more difficult. The Series 4 is undoubtedly the better device. And if you care about fall detection, the ECG app, or a larger screen then upgrading makes sense. But I think most people will remain satisfied with their Series 3s.\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography align=\"left\" component=\"div\" variant=\"body2\">\r\n                                Rating\r\n                            </Typography>\r\n                            <Rating\r\n                                name=\"simple-controlled\"\r\n                                value={value}\r\n                                precision={0.5}\r\n                                onChange={(event, newValue) => {\r\n                                    setValue(newValue);\r\n                                }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                id=\"standard-select-currency\"\r\n                                select\r\n                                label=\"Status\"\r\n                                value={currency}\r\n                                fullWidth\r\n                                onChange={handleSelectChange}\r\n                            >\r\n                                {reviewState.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <AnimateButton>\r\n                        <Button variant=\"contained\">Create</Button>\r\n                    </AnimateButton>\r\n                    <Button variant=\"text\" onClick={handleCloseDialog}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nReviewEdit.propTypes = {\r\n    open: PropTypes.bool,\r\n    handleCloseDialog: PropTypes.func\r\n};\r\n\r\nexport default ReviewEdit;\r\n"]},"metadata":{},"sourceType":"module"}