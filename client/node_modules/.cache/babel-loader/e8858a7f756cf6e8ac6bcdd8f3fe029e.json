{"ast":null,"code":"var _jsxFileName = \"/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/forms/forms-validation/LoginForms.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { Button, Grid, Stack, TextField } from '@material-ui/core'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport { gridSpacing } from 'store/constant'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n  password: yup.string('Enter your password').min(8, 'Password should be of minimum 8 characters length').required('Password is required')\n}); // ===========================|| FORM VALIDATION - LOGIN FORMIK  ||=========================== //\n\nconst LoginForms = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema,\n    onSubmit: () => {\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'Submit Success',\n        variant: 'alert',\n        alertSeverity: 'success'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"On Submit\",\n    secondary: /*#__PURE__*/_jsxDEV(SecondaryAction, {\n      link: \"https://formik.org/docs/examples/with-material-ui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 48\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"email\",\n            name: \"email\",\n            label: \"Email\",\n            defaultValue: formik.values.email,\n            onChange: formik.handleChange,\n            error: formik.touched.email && Boolean(formik.errors.email),\n            helperText: formik.touched.email && formik.errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"password\",\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            defaultValue: formik.values.password,\n            onChange: formik.handleChange,\n            error: formik.touched.password && Boolean(formik.errors.password),\n            helperText: formik.touched.password && formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Verify & Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForms, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = LoginForms;\nexport default LoginForms;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForms\");","map":{"version":3,"sources":["/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/forms/forms-validation/LoginForms.js"],"names":["React","useDispatch","Button","Grid","Stack","TextField","MainCard","AnimateButton","SecondaryAction","SNACKBAR_OPEN","gridSpacing","useFormik","yup","validationSchema","object","email","string","required","password","min","LoginForms","dispatch","formik","initialValues","onSubmit","type","open","message","variant","alertSeverity","handleSubmit","values","handleChange","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, Grid, Stack, TextField } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\r\n    password: yup.string('Enter your password').min(8, 'Password should be of minimum 8 characters length').required('Password is required')\r\n});\r\n\r\n// ===========================|| FORM VALIDATION - LOGIN FORMIK  ||=========================== //\r\n\r\nconst LoginForms = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: () => {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MainCard title=\"On Submit\" secondary={<SecondaryAction link=\"https://formik.org/docs/examples/with-material-ui\" />}>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            defaultValue={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            defaultValue={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Verify & Submit\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default LoginForms;\r\n"]},"metadata":{},"sourceType":"module"}