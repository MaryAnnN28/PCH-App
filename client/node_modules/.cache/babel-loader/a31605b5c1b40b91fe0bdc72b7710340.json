{"ast":null,"code":"var _jsxFileName = \"/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/dashboard/Clients/ListView/ClientList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react'; // material-ui\n\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { CardContent, Checkbox, Chip, Grid, IconButton, InputAdornment, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, TextField, Toolbar, Tooltip, Typography } from '@material-ui/core';\nimport { visuallyHidden } from '@material-ui/utils'; // third-party\n\nimport clsx from 'clsx'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard'; // assets\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterListTwoTone';\nimport PrintIcon from '@material-ui/icons/PrintTwoTone';\nimport FileCopyIcon from '@material-ui/icons/FileCopyTwoTone';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone'; // table data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createData(name, email, city, orders, date, status) {\n  return {\n    name,\n    email,\n    city,\n    orders,\n    date,\n    status\n  };\n}\n\nconst rowsInitial = [createData('Joseph William 1', 'Joseph@mail.com', 'Washington, DC', 263, '12.07.2018', 1), createData('Ashy Handgun 2', 'Akshay@mail.com', 'Vienna, VA', 750, '12.07.2018', 2), createData('Larry Doe 3', 'larry@mail.com', 'Vallejo, CA', 1120, '12.07.2018', 2), createData('Sara Soudan 4', 'Sara@mail.com', 'Fairfield, CA', 975, '12.07.2018', 3), createData('Joseph William 5', 'Joseph@mail.com', 'San Diego, CA', 263, '12.07.2018', 1), createData('Aisha Handgun 6', 'Akshay@mail.com', 'San Francisco, CA', 750, '12.07.2018', 3), createData('Larky Doe 7', 'larry@mail.com', 'Vallejo, CA', 1120, '12.07.2018', 2), createData('Sara Soupier 8', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 1), createData('Joseph William 9', 'Joseph@mail.com', 'Fairfield, CA', 263, '12.07.2018', 3), createData('Anshan Handgun 10', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 1), createData('Lardy Doe 11', 'larry@mail.com', 'Fairfield, CA', 1120, '12.07.2018', 1), createData('Sara Soudan 12', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 3), createData('Joseph William 13', 'Joseph@mail.com', 'Fairfield, CA', 263, '12.07.2018', 2), createData('Ashy Handgun 14', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 2), createData('Lars Doe 15', 'larry@mail.com', 'Miami, FL', 1120, '12.07.2018', 1), createData('Sara Souvenir 16', 'Sara@mail.com', 'Los Angeles, CA', 975, '12.07.2018', 2)]; // table sort\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n} // table header options\n\n\nconst headCells = [{\n  id: 'name',\n  numeric: false,\n  label: 'Customer Name',\n  align: 'left'\n}, {\n  id: 'city',\n  numeric: false,\n  label: 'City',\n  align: 'left'\n}, {\n  id: 'orders',\n  numeric: true,\n  label: 'Orders',\n  align: 'right'\n}, {\n  id: 'date',\n  numeric: true,\n  label: 'Registered',\n  align: 'center'\n}, {\n  id: 'status',\n  numeric: false,\n  label: 'Status',\n  align: 'center'\n}]; // style constant\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  sortSpan: visuallyHidden\n}));\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    padding: 0,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: {\n    color: theme.palette.secondary.main\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n})); // ===========================|| TABLE HEADER ||=========================== //\n\nfunction EnhancedTableHead({\n  classes,\n  onSelectAllClick,\n  order,\n  orderBy,\n  numSelected,\n  rowCount,\n  onRequestSort,\n  selected\n}) {\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        sx: {\n          pl: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"primary\",\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            'aria-label': 'select all desserts'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), numSelected > 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"none\",\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n          numSelected: selected.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), numSelected <= 0 && headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.align,\n        padding: headCell.disablePadding ? 'none' : 'normal',\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.sortSpan,\n            children: order === 'desc' ? 'sorted descending' : 'sorted ascending'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }, this)), numSelected <= 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n        sortDirection: false,\n        align: \"center\",\n        sx: {\n          pr: 3\n        },\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  selected: PropTypes.array,\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n}; // ===========================|| TABLE HEADER TOOLBAR ||=========================== //\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      color: \"inherit\",\n      variant: \"h4\",\n      component: \"div\",\n      children: [numSelected, \" Selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }, this), numSelected > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"3YobLOlq21lAjJ1iCLt9G1iGJSo=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n}; // ===========================|| CUSTOMER LIST ||=========================== //\n\nconst ClientList = () => {\n  _s2();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [search, setSearch] = React.useState('');\n  const [rows, setRows] = React.useState(rowsInitial);\n\n  const handleSearch = event => {\n    const newString = event.target.value;\n    setSearch(newString);\n\n    if (newString) {\n      const newRows = rows.filter(row => {\n        let matches = true;\n        const properties = ['name', 'email', 'city', 'orders'];\n        let containsQuery = false;\n        properties.forEach(property => {\n          if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\n            containsQuery = true;\n          }\n        });\n\n        if (!containsQuery) {\n          matches = false;\n        }\n\n        return matches;\n      });\n      setRows(newRows);\n    } else {\n      setRows(rowsInitial);\n    }\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelectedId = rows.map(n => n.name);\n      setSelected(newSelectedId);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Client List\",\n    content: false,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 37\n              }, this)\n            },\n            onChange: handleSearch,\n            placeholder: \"Search Customer\",\n            value: search,\n            size: \"small\",\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          sx: {\n            textAlign: 'right'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Copy\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(FileCopyIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Print\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Filter\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\",\n        children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n          classes: classes,\n          numSelected: selected.length,\n          order: order,\n          orderBy: orderBy,\n          onSelectAllClick: handleSelectAllClick,\n          onRequestSort: handleRequestSort,\n          rowCount: rows.length,\n          selected: selected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n            const isItemSelected = isSelected(row.name);\n            const labelId = `enhanced-table-checkbox-${index}`;\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              \"aria-checked\": isItemSelected,\n              tabIndex: -1,\n              selected: isItemSelected,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                sx: {\n                  pl: 3\n                },\n                onClick: event => handleClick(event, row.name),\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"primary\",\n                  checked: isItemSelected,\n                  inputProps: {\n                    'aria-labelledby': labelId\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                id: labelId,\n                scope: \"row\",\n                onClick: event => handleClick(event, row.name),\n                sx: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  sx: {\n                    color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : 'grey.900'\n                  },\n                  children: [' ', row.name, ' ']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  children: [\" \", row.email, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.orders\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: row.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: [row.status === 1 && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"In-Process\",\n                  size: \"small\",\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 66\n                }, this), row.status === 2 && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Prospect\",\n                  size: \"small\",\n                  color: \"warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 66\n                }, this), row.status === 3 && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Active\",\n                  size: \"small\",\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 66\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                sx: {\n                  pr: 3\n                },\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxDEV(VisibilityTwoToneIcon, {\n                    sx: {\n                      fontSize: '1.3rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(EditTwoToneIcon, {\n                    sx: {\n                      fontSize: '1.3rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 37\n            }, this);\n          }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: 53 * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(ClientList, \"ED4U/AhzJrnz4nlOxYNTC/I5vbk=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c3 = ClientList;\nexport default ClientList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"ClientList\");","map":{"version":3,"sources":["/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/dashboard/Clients/ListView/ClientList.js"],"names":["PropTypes","React","makeStyles","useTheme","CardContent","Checkbox","Chip","Grid","IconButton","InputAdornment","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","TextField","Toolbar","Tooltip","Typography","visuallyHidden","clsx","MainCard","DeleteIcon","FilterListIcon","PrintIcon","FileCopyIcon","SearchIcon","VisibilityTwoToneIcon","EditTwoToneIcon","createData","name","email","city","orders","date","status","rowsInitial","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","label","align","useStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","sortSpan","useToolbarStyles","padding","paddingLeft","paddingRight","highlight","color","palette","secondary","main","title","flex","EnhancedTableHead","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","selected","createSortHandler","property","event","pl","length","headCell","disablePadding","pr","propTypes","object","isRequired","number","func","oneOf","string","EnhancedTableToolbar","props","ClientList","setOrder","useState","setOrderBy","setSelected","page","setPage","rowsPerPage","setRowsPerPage","search","setSearch","rows","setRows","handleSearch","newString","target","value","newRows","filter","row","matches","properties","containsQuery","forEach","toString","toLowerCase","includes","handleRequestSort","isAsc","handleSelectAllClick","checked","newSelectedId","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","isSelected","emptyRows","Math","max","startAdornment","textAlign","isItemSelected","labelId","cursor","mode","grey","fontSize","height"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport * as React from 'react';\n\n// material-ui\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport {\n    CardContent,\n    Checkbox,\n    Chip,\n    Grid,\n    IconButton,\n    InputAdornment,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TablePagination,\n    TableRow,\n    TableSortLabel,\n    TextField,\n    Toolbar,\n    Tooltip,\n    Typography\n} from '@material-ui/core';\nimport { visuallyHidden } from '@material-ui/utils';\n\n// third-party\nimport clsx from 'clsx';\n\n// project imports\nimport MainCard from 'ui-component/cards/MainCard';\n\n// assets\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterListTwoTone';\nimport PrintIcon from '@material-ui/icons/PrintTwoTone';\nimport FileCopyIcon from '@material-ui/icons/FileCopyTwoTone';\nimport SearchIcon from '@material-ui/icons/Search';\nimport VisibilityTwoToneIcon from '@material-ui/icons/VisibilityTwoTone';\nimport EditTwoToneIcon from '@material-ui/icons/EditTwoTone';\n\n// table data\nfunction createData(name, email, city, orders, date, status) {\n    return { name, email, city, orders, date, status };\n}\n\nconst rowsInitial = [\n    createData('Joseph William 1', 'Joseph@mail.com', 'Washington, DC', 263, '12.07.2018', 1),\n    createData('Ashy Handgun 2', 'Akshay@mail.com', 'Vienna, VA', 750, '12.07.2018', 2),\n    createData('Larry Doe 3', 'larry@mail.com', 'Vallejo, CA', 1120, '12.07.2018', 2),\n    createData('Sara Soudan 4', 'Sara@mail.com', 'Fairfield, CA', 975, '12.07.2018', 3),\n    createData('Joseph William 5', 'Joseph@mail.com', 'San Diego, CA', 263, '12.07.2018', 1),\n    createData('Aisha Handgun 6', 'Akshay@mail.com', 'San Francisco, CA', 750, '12.07.2018', 3),\n    createData('Larky Doe 7', 'larry@mail.com', 'Vallejo, CA', 1120, '12.07.2018', 2),\n    createData('Sara Soupier 8', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 1),\n    createData('Joseph William 9', 'Joseph@mail.com', 'Fairfield, CA', 263, '12.07.2018', 3),\n    createData('Anshan Handgun 10', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 1),\n    createData('Lardy Doe 11', 'larry@mail.com', 'Fairfield, CA', 1120, '12.07.2018', 1),\n    createData('Sara Soudan 12', 'Sara@mail.com', 'New York, USA', 975, '12.07.2018', 3),\n    createData('Joseph William 13', 'Joseph@mail.com', 'Fairfield, CA', 263, '12.07.2018', 2),\n    createData('Ashy Handgun 14', 'Akshay@mail.com', 'New York, USA', 750, '12.07.2018', 2),\n    createData('Lars Doe 15', 'larry@mail.com', 'Miami, FL', 1120, '12.07.2018', 1),\n    createData('Sara Souvenir 16', 'Sara@mail.com', 'Los Angeles, CA', 975, '12.07.2018', 2)\n];\n\n// table sort\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\n// table header options\nconst headCells = [\n    {\n        id: 'name',\n        numeric: false,\n        label: 'Customer Name',\n        align: 'left'\n    },\n    {\n        id: 'city',\n        numeric: false,\n        label: 'City',\n        align: 'left'\n    },\n    {\n        id: 'orders',\n        numeric: true,\n        label: 'Orders',\n        align: 'right'\n    },\n    {\n        id: 'date',\n        numeric: true,\n        label: 'Registered',\n        align: 'center'\n    },\n    {\n        id: 'status',\n        numeric: false,\n        label: 'Status',\n        align: 'center'\n    }\n];\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%'\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2)\n    },\n    table: {\n        minWidth: 750\n    },\n    sortSpan: visuallyHidden\n}));\n\nconst useToolbarStyles = makeStyles((theme) => ({\n    root: {\n        padding: 0,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1)\n    },\n    highlight: {\n        color: theme.palette.secondary.main\n    },\n    title: {\n        flex: '1 1 100%'\n    }\n}));\n\n// ===========================|| TABLE HEADER ||=========================== //\n\nfunction EnhancedTableHead({ classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, selected }) {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\" sx={{ pl: 3 }}>\n                    <Checkbox\n                        color=\"primary\"\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{\n                            'aria-label': 'select all desserts'\n                        }}\n                    />\n                </TableCell>\n                {numSelected > 0 && (\n                    <TableCell padding=\"none\" colSpan={6}>\n                        <EnhancedTableToolbar numSelected={selected.length} />\n                    </TableCell>\n                )}\n                {numSelected <= 0 &&\n                    headCells.map((headCell) => (\n                        <TableCell\n                            key={headCell.id}\n                            align={headCell.align}\n                            padding={headCell.disablePadding ? 'none' : 'normal'}\n                            sortDirection={orderBy === headCell.id ? order : false}\n                        >\n                            <TableSortLabel\n                                active={orderBy === headCell.id}\n                                direction={orderBy === headCell.id ? order : 'asc'}\n                                onClick={createSortHandler(headCell.id)}\n                            >\n                                {headCell.label}\n                                {orderBy === headCell.id ? (\n                                    <span className={classes.sortSpan}>{order === 'desc' ? 'sorted descending' : 'sorted ascending'}</span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    ))}\n                {numSelected <= 0 && (\n                    <TableCell sortDirection={false} align=\"center\" sx={{ pr: 3 }}>\n                        Action\n                    </TableCell>\n                )}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    selected: PropTypes.array,\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired\n};\n\n// ===========================|| TABLE HEADER TOOLBAR ||=========================== //\n\nconst EnhancedTableToolbar = (props) => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"h4\" component=\"div\">\n                    {numSelected} Selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n                    Nutrition\n                </Typography>\n            )}\n\n            {numSelected > 0 && (\n                <Tooltip title=\"Delete\">\n                    <IconButton>\n                        <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired\n};\n\n// ===========================|| CUSTOMER LIST ||=========================== //\n\nconst ClientList = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [search, setSearch] = React.useState('');\n    const [rows, setRows] = React.useState(rowsInitial);\n\n    const handleSearch = (event) => {\n        const newString = event.target.value;\n        setSearch(newString);\n\n        if (newString) {\n            const newRows = rows.filter((row) => {\n                let matches = true;\n\n                const properties = ['name', 'email', 'city', 'orders'];\n                let containsQuery = false;\n\n                properties.forEach((property) => {\n                    if (row[property].toString().toLowerCase().includes(newString.toString().toLowerCase())) {\n                        containsQuery = true;\n                    }\n                });\n\n                if (!containsQuery) {\n                    matches = false;\n                }\n                return matches;\n            });\n            setRows(newRows);\n        } else {\n            setRows(rowsInitial);\n        }\n    };\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelectedId = rows.map((n) => n.name);\n            setSelected(newSelectedId);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (name) => selected.indexOf(name) !== -1;\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n    return (\n        <MainCard title=\"Client List\" content={false}>\n            <CardContent>\n                <Grid container justifyContent=\"space-between\" alignItems=\"center\" spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <SearchIcon fontSize=\"small\" />\n                                    </InputAdornment>\n                                )\n                            }}\n                            onChange={handleSearch}\n                            placeholder=\"Search Customer\"\n                            value={search}\n                            size=\"small\"\n                            fullWidth\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6} sx={{ textAlign: 'right' }}>\n                        <Tooltip title=\"Copy\">\n                            <IconButton>\n                                <FileCopyIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Print\">\n                            <IconButton>\n                                <PrintIcon />\n                            </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"Filter\">\n                            <IconButton>\n                                <FilterListIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </Grid>\n                </Grid>\n            </CardContent>\n\n            {/* table */}\n            <TableContainer>\n                <Table className={classes.table} aria-labelledby=\"tableTitle\">\n                    <EnhancedTableHead\n                        classes={classes}\n                        numSelected={selected.length}\n                        order={order}\n                        orderBy={orderBy}\n                        onSelectAllClick={handleSelectAllClick}\n                        onRequestSort={handleRequestSort}\n                        rowCount={rows.length}\n                        selected={selected}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getComparator(order, orderBy))\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((row, index) => {\n                                const isItemSelected = isSelected(row.name);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={index}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\" sx={{ pl: 3 }} onClick={(event) => handleClick(event, row.name)}>\n                                            <Checkbox\n                                                color=\"primary\"\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    'aria-labelledby': labelId\n                                                }}\n                                            />\n                                        </TableCell>\n                                        <TableCell\n                                            component=\"th\"\n                                            id={labelId}\n                                            scope=\"row\"\n                                            onClick={(event) => handleClick(event, row.name)}\n                                            sx={{ cursor: 'pointer' }}\n                                        >\n                                            <Typography\n                                                variant=\"subtitle1\"\n                                                sx={{ color: theme.palette.mode === 'dark' ? theme.palette.grey[600] : 'grey.900' }}\n                                            >\n                                                {' '}\n                                                {row.name}{' '}\n                                            </Typography>\n                                            <Typography variant=\"caption\"> {row.email} </Typography>\n                                        </TableCell>\n                                        <TableCell>{row.city}</TableCell>\n                                        <TableCell align=\"right\">{row.orders}</TableCell>\n                                        <TableCell align=\"center\">{row.date}</TableCell>\n                                        <TableCell align=\"center\">\n                                            {row.status === 1 && <Chip label=\"In-Process\" size=\"small\" color=\"secondary\" />}\n                                            {row.status === 2 && <Chip label=\"Prospect\" size=\"small\" color=\"warning\" />}\n                                            {row.status === 3 && <Chip label=\"Active\" size=\"small\" color=\"success\" />}\n                                        </TableCell>\n                                        <TableCell align=\"center\" sx={{ pr: 3 }}>\n                                            <IconButton color=\"primary\">\n                                                <VisibilityTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                                            </IconButton>\n                                            <IconButton color=\"secondary\">\n                                                <EditTwoToneIcon sx={{ fontSize: '1.3rem' }} />\n                                            </IconButton>\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        {emptyRows > 0 && (\n                            <TableRow\n                                style={{\n                                    height: 53 * emptyRows\n                                }}\n                            >\n                                <TableCell colSpan={6} />\n                            </TableRow>\n                        )}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            {/* table pagination */}\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </MainCard>\n    );\n};\n\nexport default ClientList;\n"]},"metadata":{},"sourceType":"module"}