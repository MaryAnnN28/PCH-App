{"ast":null,"code":"var _jsxFileName = \"/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/application/calendar/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // material-ui\n\nimport { useTheme } from '@material-ui/core/styles';\nimport { Button, Dialog, useMediaQuery } from '@material-ui/core'; // third-party\n\nimport _ from 'lodash';\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport interactionPlugin from '@fullcalendar/interaction'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport SubCard from 'ui-component/cards/SubCard';\nimport CalenderStyled from './CalenderStyled';\nimport Toolbar from './Toolbar';\nimport AddEventForm from './AddEventForm';\nimport axios from 'utils/axios'; // assets\n\nimport AddAlarmTwoToneIcon from '@material-ui/icons/AddAlarmTwoTone'; // ===========================|| APPLICATION CALENDAR ||=========================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = () => {\n  _s();\n\n  const theme = useTheme();\n  const calendarRef = React.useRef(null);\n  const matchSm = useMediaQuery(theme.breakpoints.down('sm')); // fetch events data\n\n  const [events, setEvents] = React.useState([]);\n\n  const getEvents = async () => {\n    const response = await axios.get('/api/calendar/events');\n    setEvents(response.data.events);\n  };\n\n  React.useEffect(() => {\n    getEvents();\n  }, []);\n  const [date, setDate] = React.useState(new Date());\n  const [view, setView] = React.useState(matchSm ? 'listWeek' : 'dayGridMonth'); // calendar toolbar events\n\n  const handleDateToday = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleViewChange = newView => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  };\n\n  const handleDatePrev = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleDateNext = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\n  const [selectedRange, setSelectedRange] = React.useState(null);\n  const [selectedEvent, setSelectedEvent] = React.useState(null);\n\n  const handleModalClose = () => {\n    setIsModalOpen(false);\n    setSelectedEvent(null);\n    setSelectedRange(null);\n  }; // calendar event select/add/edit/delete\n\n\n  const handleRangeSelect = arg => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      calendarApi.unselect();\n    }\n\n    setSelectedRange({\n      start: arg.start,\n      end: arg.end\n    });\n    setIsModalOpen(true);\n  };\n\n  const handleEventSelect = arg => {\n    if (arg.event.id) {\n      const selectEvent = events.find(_event => _event.id === arg.event.id);\n      setSelectedEvent(selectEvent);\n    } else {\n      setSelectedEvent(null);\n    }\n\n    setIsModalOpen(true);\n  };\n\n  const handleEventUpdate = async ({\n    event\n  }) => {\n    try {\n      const response = await axios.post('/api/calendar/events/update', {\n        eventId: event.id,\n        update: {\n          allDay: event.allDay,\n          start: event.start,\n          end: event.end\n        }\n      });\n      setEvents(response.data.events);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleEventCreate = async data => {\n    const response = await axios.post('/api/calendar/events/new', data);\n    setEvents([...events, response.data.event]);\n    handleModalClose();\n  };\n\n  const handleUpdateEvent = async (eventId, update) => {\n    const response = await axios.post('/api/calendar/events/update', {\n      eventId,\n      update\n    });\n    setEvents(response.data.events);\n    handleModalClose();\n  };\n\n  const handleEventDelete = async id => {\n    try {\n      await axios.post('/api/calendar/events/remove', {\n        eventId: id\n      });\n\n      const newEvent = _.reject(events, {\n        id\n      });\n\n      setEvents(newEvent);\n      handleModalClose();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleAddClick = () => {\n    setIsModalOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"Event Calendar\",\n    secondary: /*#__PURE__*/_jsxDEV(Button, {\n      color: \"secondary\",\n      variant: \"contained\",\n      onClick: handleAddClick,\n      children: [/*#__PURE__*/_jsxDEV(AddAlarmTwoToneIcon, {\n        fontSize: \"small\",\n        sx: {\n          mr: 0.75\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), \"Add New Event\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(CalenderStyled, {\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        date: date,\n        view: view,\n        onClickNext: handleDateNext,\n        onClickPrev: handleDatePrev,\n        onClickToday: handleDateToday,\n        onChangeView: handleViewChange,\n        sx: {\n          pb: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SubCard, {\n        children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n          weekends: true,\n          editable: true,\n          droppable: true,\n          selectable: true,\n          events: events,\n          ref: calendarRef,\n          rerenderDelay: 10,\n          initialDate: date,\n          initialView: view,\n          dayMaxEventRows: 3,\n          eventDisplay: \"block\",\n          headerToolbar: false,\n          allDayMaintainDuration: true,\n          eventResizableFromStart: true,\n          select: handleRangeSelect,\n          eventDrop: handleEventUpdate,\n          eventClick: handleEventSelect,\n          eventResize: handleEventUpdate,\n          height: matchSm ? 'auto' : 720,\n          plugins: [listPlugin, dayGridPlugin, timelinePlugin, timeGridPlugin, interactionPlugin]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      maxWidth: \"sm\",\n      fullWidth: true,\n      onClose: handleModalClose,\n      open: isModalOpen,\n      sx: {\n        '& .MuiDialog-paper': {\n          p: 0\n        }\n      },\n      children: isModalOpen && /*#__PURE__*/_jsxDEV(AddEventForm, {\n        event: selectedEvent,\n        range: selectedRange,\n        onCancel: handleModalClose,\n        handleDelete: handleEventDelete,\n        handleCreate: handleEventCreate,\n        handleUpdate: handleUpdateEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendar, \"jqWTdDxC0ORGMLfMr4qLV3Rx9tc=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/application/calendar/index.js"],"names":["React","useTheme","Button","Dialog","useMediaQuery","_","FullCalendar","listPlugin","dayGridPlugin","timeGridPlugin","timelinePlugin","interactionPlugin","MainCard","SubCard","CalenderStyled","Toolbar","AddEventForm","axios","AddAlarmTwoToneIcon","Calendar","theme","calendarRef","useRef","matchSm","breakpoints","down","events","setEvents","useState","getEvents","response","get","data","useEffect","date","setDate","Date","view","setView","handleDateToday","calendarEl","current","calendarApi","getApi","today","getDate","handleViewChange","newView","changeView","handleDatePrev","prev","handleDateNext","next","isModalOpen","setIsModalOpen","selectedRange","setSelectedRange","selectedEvent","setSelectedEvent","handleModalClose","handleRangeSelect","arg","unselect","start","end","handleEventSelect","event","id","selectEvent","find","_event","handleEventUpdate","post","eventId","update","allDay","err","console","error","handleEventCreate","handleUpdateEvent","handleEventDelete","newEvent","reject","handleAddClick","mr","pb","p"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Button, Dialog, useMediaQuery } from '@material-ui/core';\r\n\r\n// third-party\r\nimport _ from 'lodash';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport timelinePlugin from '@fullcalendar/timeline';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport CalenderStyled from './CalenderStyled';\r\nimport Toolbar from './Toolbar';\r\nimport AddEventForm from './AddEventForm';\r\nimport axios from 'utils/axios';\r\n\r\n// assets\r\nimport AddAlarmTwoToneIcon from '@material-ui/icons/AddAlarmTwoTone';\r\n\r\n// ===========================|| APPLICATION CALENDAR ||=========================== //\r\n\r\nconst Calendar = () => {\r\n    const theme = useTheme();\r\n    const calendarRef = React.useRef(null);\r\n    const matchSm = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    // fetch events data\r\n    const [events, setEvents] = React.useState([]);\r\n    const getEvents = async () => {\r\n        const response = await axios.get('/api/calendar/events');\r\n        setEvents(response.data.events);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        getEvents();\r\n    }, []);\r\n\r\n    const [date, setDate] = React.useState(new Date());\r\n    const [view, setView] = React.useState(matchSm ? 'listWeek' : 'dayGridMonth');\r\n\r\n    // calendar toolbar events\r\n    const handleDateToday = () => {\r\n        const calendarEl = calendarRef.current;\r\n\r\n        if (calendarEl) {\r\n            const calendarApi = calendarEl.getApi();\r\n\r\n            calendarApi.today();\r\n            setDate(calendarApi.getDate());\r\n        }\r\n    };\r\n\r\n    const handleViewChange = (newView) => {\r\n        const calendarEl = calendarRef.current;\r\n\r\n        if (calendarEl) {\r\n            const calendarApi = calendarEl.getApi();\r\n\r\n            calendarApi.changeView(newView);\r\n            setView(newView);\r\n        }\r\n    };\r\n\r\n    const handleDatePrev = () => {\r\n        const calendarEl = calendarRef.current;\r\n\r\n        if (calendarEl) {\r\n            const calendarApi = calendarEl.getApi();\r\n\r\n            calendarApi.prev();\r\n            setDate(calendarApi.getDate());\r\n        }\r\n    };\r\n\r\n    const handleDateNext = () => {\r\n        const calendarEl = calendarRef.current;\r\n\r\n        if (calendarEl) {\r\n            const calendarApi = calendarEl.getApi();\r\n\r\n            calendarApi.next();\r\n            setDate(calendarApi.getDate());\r\n        }\r\n    };\r\n\r\n    const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n    const [selectedRange, setSelectedRange] = React.useState(null);\r\n    const [selectedEvent, setSelectedEvent] = React.useState(null);\r\n\r\n    const handleModalClose = () => {\r\n        setIsModalOpen(false);\r\n        setSelectedEvent(null);\r\n        setSelectedRange(null);\r\n    };\r\n\r\n    // calendar event select/add/edit/delete\r\n    const handleRangeSelect = (arg) => {\r\n        const calendarEl = calendarRef.current;\r\n        if (calendarEl) {\r\n            const calendarApi = calendarEl.getApi();\r\n            calendarApi.unselect();\r\n        }\r\n\r\n        setSelectedRange({\r\n            start: arg.start,\r\n            end: arg.end\r\n        });\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleEventSelect = (arg) => {\r\n        if (arg.event.id) {\r\n            const selectEvent = events.find((_event) => _event.id === arg.event.id);\r\n            setSelectedEvent(selectEvent);\r\n        } else {\r\n            setSelectedEvent(null);\r\n        }\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleEventUpdate = async ({ event }) => {\r\n        try {\r\n            const response = await axios.post('/api/calendar/events/update', {\r\n                eventId: event.id,\r\n                update: {\r\n                    allDay: event.allDay,\r\n                    start: event.start,\r\n                    end: event.end\r\n                }\r\n            });\r\n\r\n            setEvents(response.data.events);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleEventCreate = async (data) => {\r\n        const response = await axios.post('/api/calendar/events/new', data);\r\n\r\n        setEvents([...events, response.data.event]);\r\n        handleModalClose();\r\n    };\r\n\r\n    const handleUpdateEvent = async (eventId, update) => {\r\n        const response = await axios.post('/api/calendar/events/update', {\r\n            eventId,\r\n            update\r\n        });\r\n\r\n        setEvents(response.data.events);\r\n        handleModalClose();\r\n    };\r\n\r\n    const handleEventDelete = async (id) => {\r\n        try {\r\n            await axios.post('/api/calendar/events/remove', {\r\n                eventId: id\r\n            });\r\n\r\n            const newEvent = _.reject(events, { id });\r\n            setEvents(newEvent);\r\n            handleModalClose();\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    return (\r\n        <MainCard\r\n            title=\"Event Calendar\"\r\n            secondary={\r\n                <Button color=\"secondary\" variant=\"contained\" onClick={handleAddClick}>\r\n                    <AddAlarmTwoToneIcon fontSize=\"small\" sx={{ mr: 0.75 }} />\r\n                    Add New Event\r\n                </Button>\r\n            }\r\n        >\r\n            <CalenderStyled>\r\n                <Toolbar\r\n                    date={date}\r\n                    view={view}\r\n                    onClickNext={handleDateNext}\r\n                    onClickPrev={handleDatePrev}\r\n                    onClickToday={handleDateToday}\r\n                    onChangeView={handleViewChange}\r\n                    sx={{ pb: 3 }}\r\n                />\r\n                <SubCard>\r\n                    <FullCalendar\r\n                        weekends\r\n                        editable\r\n                        droppable\r\n                        selectable\r\n                        events={events}\r\n                        ref={calendarRef}\r\n                        rerenderDelay={10}\r\n                        initialDate={date}\r\n                        initialView={view}\r\n                        dayMaxEventRows={3}\r\n                        eventDisplay=\"block\"\r\n                        headerToolbar={false}\r\n                        allDayMaintainDuration\r\n                        eventResizableFromStart\r\n                        select={handleRangeSelect}\r\n                        eventDrop={handleEventUpdate}\r\n                        eventClick={handleEventSelect}\r\n                        eventResize={handleEventUpdate}\r\n                        height={matchSm ? 'auto' : 720}\r\n                        plugins={[listPlugin, dayGridPlugin, timelinePlugin, timeGridPlugin, interactionPlugin]}\r\n                    />\r\n                </SubCard>\r\n            </CalenderStyled>\r\n\r\n            {/* Dialog renders its body even if not open */}\r\n            <Dialog maxWidth=\"sm\" fullWidth onClose={handleModalClose} open={isModalOpen} sx={{ '& .MuiDialog-paper': { p: 0 } }}>\r\n                {isModalOpen && (\r\n                    <AddEventForm\r\n                        event={selectedEvent}\r\n                        range={selectedRange}\r\n                        onCancel={handleModalClose}\r\n                        handleDelete={handleEventDelete}\r\n                        handleCreate={handleEventCreate}\r\n                        handleUpdate={handleUpdateEvent}\r\n                    />\r\n                )}\r\n            </Dialog>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Calendar;\r\n"]},"metadata":{},"sourceType":"module"}