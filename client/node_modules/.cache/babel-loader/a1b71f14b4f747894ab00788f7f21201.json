{"ast":null,"code":"var _jsxFileName = \"/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/forms/forms-validation/InstantFeedback.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux'; // material-ui\n\nimport { Button, Grid, Stack, TextField } from '@material-ui/core'; // project imports\n\nimport MainCard from 'ui-component/cards/MainCard';\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport { gridSpacing } from 'store/constant'; // third-party\n\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  emailInstant: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n  passwordInstant: yup.string('Enter your password').min(8, 'Password should be of minimum 8 characters length').required('Password is required')\n}); // ===========================|| FORM VALIDATION - INSTANT FEEDBACK FORMIK  ||=========================== //\n\nconst InstantFeedback = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      emailInstant: '',\n      password: ''\n    },\n    validationSchema,\n    onSubmit: () => {\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message: 'On Leave - Submit Success',\n        variant: 'alert',\n        alertSeverity: 'success'\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(MainCard, {\n    title: \"On Leave\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"emailInstant\",\n            name: \"emailInstant\",\n            label: \"Email\",\n            defaultValue: formik.values.emailInstant,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            error: formik.touched.emailInstant && Boolean(formik.errors.emailInstant),\n            helperText: formik.touched.emailInstant && formik.errors.emailInstant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            id: \"passwordInstant\",\n            name: \"passwordInstant\",\n            label: \"Password\",\n            type: \"password\",\n            defaultValue: formik.values.passwordInstant,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            error: formik.touched.passwordInstant && Boolean(formik.errors.passwordInstant),\n            helperText: formik.touched.passwordInstant && formik.errors.passwordInstant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                type: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InstantFeedback, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = InstantFeedback;\nexport default InstantFeedback;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstantFeedback\");","map":{"version":3,"sources":["/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/forms/forms-validation/InstantFeedback.js"],"names":["React","useDispatch","Button","Grid","Stack","TextField","MainCard","AnimateButton","SNACKBAR_OPEN","gridSpacing","useFormik","yup","validationSchema","object","emailInstant","string","email","required","passwordInstant","min","InstantFeedback","dispatch","formik","initialValues","password","onSubmit","type","open","message","variant","alertSeverity","handleSubmit","values","handleChange","handleBlur","touched","Boolean","errors"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, Grid, Stack, TextField } from '@material-ui/core';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// third-party\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object({\r\n    emailInstant: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\r\n    passwordInstant: yup\r\n        .string('Enter your password')\r\n        .min(8, 'Password should be of minimum 8 characters length')\r\n        .required('Password is required')\r\n});\r\n\r\n// ===========================|| FORM VALIDATION - INSTANT FEEDBACK FORMIK  ||=========================== //\r\n\r\nconst InstantFeedback = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            emailInstant: '',\r\n            password: ''\r\n        },\r\n        validationSchema,\r\n        onSubmit: () => {\r\n            dispatch({\r\n                type: SNACKBAR_OPEN,\r\n                open: true,\r\n                message: 'On Leave - Submit Success',\r\n                variant: 'alert',\r\n                alertSeverity: 'success'\r\n            });\r\n        }\r\n    });\r\n\r\n    return (\r\n        <MainCard title=\"On Leave\">\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"emailInstant\"\r\n                            name=\"emailInstant\"\r\n                            label=\"Email\"\r\n                            defaultValue={formik.values.emailInstant}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            error={formik.touched.emailInstant && Boolean(formik.errors.emailInstant)}\r\n                            helperText={formik.touched.emailInstant && formik.errors.emailInstant}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            fullWidth\r\n                            id=\"passwordInstant\"\r\n                            name=\"passwordInstant\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            defaultValue={formik.values.passwordInstant}\r\n                            onChange={formik.handleChange}\r\n                            onBlur={formik.handleBlur}\r\n                            error={formik.touched.passwordInstant && Boolean(formik.errors.passwordInstant)}\r\n                            helperText={formik.touched.passwordInstant && formik.errors.passwordInstant}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n                            <AnimateButton>\r\n                                <Button variant=\"contained\" type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default InstantFeedback;\r\n"]},"metadata":{},"sourceType":"module"}