{"ast":null,"code":"var _jsxFileName = \"/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/pages/maintenance/ComingSoon/ComingSoon1/MailerSubscriber.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // material-ui\n\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput } from '@material-ui/core'; // third party\n\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios'; // project imports\n\nimport AnimateButton from 'ui-component/extended/AnimateButton';\nimport useScriptRef from 'hooks/useScriptRef';\nimport { SNACKBAR_OPEN } from 'store/actions';\nimport { gridSpacing } from 'store/constant'; // ===========================|| MAILER SUBSCRIBER ||=========================== //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MailerSubscriber = ({ ...others\n}) => {\n  _s();\n\n  const scriptedRef = useScriptRef();\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n    }),\n    onSubmit: async (values, {\n      setErrors,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        const options = {\n          headers: {\n            'content-type': 'application/json'\n          }\n        };\n        await axios.post('https://yourapicall', {\n          email: values.email\n        }, options);\n        dispatch({\n          type: SNACKBAR_OPEN,\n          open: true,\n          message: 'Success! Please check inbox and confirm.',\n          variant: 'alert',\n          alertSeverity: 'success'\n        });\n\n        if (scriptedRef.current) {\n          setStatus({\n            success: true\n          });\n          setSubmitting(false);\n        }\n      } catch (err) {\n        if (scriptedRef.current) {\n          setStatus({\n            success: false\n          });\n          setErrors({\n            submit: err.message\n          });\n          setSubmitting(false);\n        }\n      }\n    },\n    children: ({\n      errors,\n      handleBlur,\n      handleChange,\n      handleSubmit,\n      isSubmitting,\n      touched,\n      values\n    }) => /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      ...others,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          zeroMinWidth: true,\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            error: Boolean(touched.email && errors.email),\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              htmlFor: \"outlined-adornment-email-forgot\",\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n              id: \"outlined-adornment-email-forgot\",\n              type: \"email\",\n              defaultValue: values.email,\n              name: \"email\",\n              onBlur: handleBlur,\n              onChange: handleChange,\n              label: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disableElevation: true,\n              disabled: isSubmitting,\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                p: '12px 22px'\n              },\n              children: \"Subscribe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), touched.email && errors.email && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          id: \"standard-weight-helper-text-email-forgot\",\n          children: [' ', errors.email, ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          children: errors.submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MailerSubscriber, \"X/XBgea1FccaLq9mP3I7wp2IiwU=\", false, function () {\n  return [useScriptRef, useDispatch];\n});\n\n_c = MailerSubscriber;\nexport default MailerSubscriber;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailerSubscriber\");","map":{"version":3,"sources":["/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/pages/maintenance/ComingSoon/ComingSoon1/MailerSubscriber.js"],"names":["React","Box","Button","FormControl","FormHelperText","Grid","InputLabel","OutlinedInput","useDispatch","Formik","Yup","axios","AnimateButton","useScriptRef","SNACKBAR_OPEN","gridSpacing","MailerSubscriber","others","scriptedRef","dispatch","email","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","options","headers","post","type","open","message","variant","alertSeverity","current","success","err","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","p","mt"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { Box, Button, FormControl, FormHelperText, Grid, InputLabel, OutlinedInput } from '@material-ui/core';\r\n\r\n// third party\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport { SNACKBAR_OPEN } from 'store/actions';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ===========================|| MAILER SUBSCRIBER ||=========================== //\r\n\r\nconst MailerSubscriber = ({ ...others }) => {\r\n    const scriptedRef = useScriptRef();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: '',\r\n                submit: null\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\r\n            })}\r\n            onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                try {\r\n                    const options = {\r\n                        headers: {\r\n                            'content-type': 'application/json'\r\n                        }\r\n                    };\r\n                    await axios.post('https://yourapicall', { email: values.email }, options);\r\n                    dispatch({\r\n                        type: SNACKBAR_OPEN,\r\n                        open: true,\r\n                        message: 'Success! Please check inbox and confirm.',\r\n                        variant: 'alert',\r\n                        alertSeverity: 'success'\r\n                    });\r\n\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: true });\r\n                        setSubmitting(false);\r\n                    }\r\n                } catch (err) {\r\n                    if (scriptedRef.current) {\r\n                        setStatus({ success: false });\r\n                        setErrors({ submit: err.message });\r\n                        setSubmitting(false);\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                <form noValidate onSubmit={handleSubmit} {...others}>\r\n                    <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <FormControl fullWidth error={Boolean(touched.email && errors.email)}>\r\n                                <InputLabel htmlFor=\"outlined-adornment-email-forgot\">Email Address</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-email-forgot\"\r\n                                    type=\"email\"\r\n                                    defaultValue={values.email}\r\n                                    name=\"email\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    label=\"Email Address\"\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    size=\"large\"\r\n                                    sx={{ p: '12px 22px' }}\r\n                                >\r\n                                    Subscribe\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {touched.email && errors.email && (\r\n                        <Box\r\n                            sx={{\r\n                                mt: 1\r\n                            }}\r\n                        >\r\n                            <FormHelperText error id=\"standard-weight-helper-text-email-forgot\">\r\n                                {' '}\r\n                                {errors.email}{' '}\r\n                            </FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                    {errors.submit && (\r\n                        <Box\r\n                            sx={{\r\n                                mt: 3\r\n                            }}\r\n                        >\r\n                            <FormHelperText error>{errors.submit}</FormHelperText>\r\n                        </Box>\r\n                    )}\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default MailerSubscriber;\r\n"]},"metadata":{},"sourceType":"module"}