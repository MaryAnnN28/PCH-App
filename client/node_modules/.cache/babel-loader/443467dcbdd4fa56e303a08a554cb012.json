{"ast":null,"code":"var _jsxFileName = \"/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/application/contact/UserEdit.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react'; // material-ui\n\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Autocomplete, Avatar, Button, Divider, FormControl, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, TextField, Typography, useScrollTrigger } from '@material-ui/core'; // third-party\n\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // project imports\n\nimport SubCard from 'ui-component/cards/SubCard';\nimport { gridSpacing } from 'store/constant'; // assets\n\nimport HighlightOffTwoToneIcon from '@material-ui/icons/HighlightOffTwoTone';\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\nimport WorkTwoToneIcon from '@material-ui/icons/WorkTwoTone';\nimport MailTwoToneIcon from '@material-ui/icons/MailTwoTone';\nimport CallTwoToneIcon from '@material-ui/icons/CallTwoTone';\nimport UploadTwoToneIcon from '@material-ui/icons/UploadTwoTone';\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\nimport User1 from 'assets/images/users/avatar-1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst avatarImage = require.context('assets/images/users', true); // style constant\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: '342px'\n  },\n  btnProfile: {\n    width: '100%'\n  },\n  input: {\n    opacity: 0,\n    position: 'fixed',\n    zIndex: 1,\n    padding: 0.5,\n    cursor: 'pointer'\n  },\n  ScrollHeight: {\n    height: 'calc(100vh - 83px)',\n    overflowX: 'hidden'\n  }\n});\nconst jobTypes = [{\n  label: 'Work',\n  id: 1\n}, {\n  label: 'Personal',\n  id: 2\n}]; // sticky edit card\n\nfunction ElevationScroll(props) {\n  _s();\n\n  const {\n    children,\n    window\n  } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 130,\n    target: window ? window() : undefined\n  });\n  return /*#__PURE__*/React.cloneElement(children, {\n    style: {\n      position: trigger ? 'fixed' : 'relative',\n      top: trigger ? '83px' : '0',\n      width: trigger ? '318px' : '100%'\n    }\n  });\n} // ===========================|| CONTACT CARD/LIST USER EDIT ||=========================== //\n\n\n_s(ElevationScroll, \"EC2GbbZl9x3XKoXLVx1H89cOBi0=\", false, function () {\n  return [useScrollTrigger];\n});\n\n_c = ElevationScroll;\n\nconst UserEdit = ({\n  user,\n  onCancel,\n  onSave,\n  ...others\n}) => {\n  _s2();\n\n  const classes = useStyles();\n  const theme = useTheme(); // save user to local state to update details and submit letter\n\n  const [profile, setProfile] = useState({});\n  useEffect(() => {\n    setProfile(user);\n  }, [user]);\n  let avatarProfile = User1;\n\n  if (profile) {\n    avatarProfile = profile.avatar && avatarImage(`./${profile.avatar}`).default;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ElevationScroll, { ...others,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(SubCard, {\n        sx: {\n          background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\n        },\n        content: false,\n        children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n          className: classes.ScrollHeight,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: gridSpacing,\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: \"User 3\",\n                    src: avatarProfile,\n                    sx: {\n                      width: '64px',\n                      height: '64px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: true,\n                  zeroMinWidth: true,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"containedButtonFile\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          accept: \"image/*\",\n                          className: classes.input,\n                          id: \"containedButtonFile\",\n                          multiple: true,\n                          type: \"file\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 125,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"outlined\",\n                          size: \"small\",\n                          startIcon: /*#__PURE__*/_jsxDEV(UploadTwoToneIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 132,\n                            columnNumber: 104\n                          }, this),\n                          children: \"Upload\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 132,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        children: \"Image size should be 125kb Max.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => onCancel(profile),\n                    children: /*#__PURE__*/_jsxDEV(HighlightOffTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  value: profile.name,\n                  onChange: e => setProfile({ ...profile,\n                    name: e.target.value\n                  }),\n                  type: \"text\",\n                  label: \"Name\",\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(BusinessTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Company\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  value: profile.company,\n                  onChange: e => setProfile({ ...profile,\n                    company: e.target.value\n                  }),\n                  type: \"text\",\n                  label: \"Company\",\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(BusinessTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Job Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  value: profile.role,\n                  onChange: e => setProfile({ ...profile,\n                    role: e.target.value\n                  }),\n                  type: \"text\",\n                  label: \"Job Title\",\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(WorkTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                multiple: true,\n                options: jobTypes,\n                getOptionLabel: option => option.label,\n                defaultValue: [jobTypes[0]],\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  value: profile.work_email,\n                  onChange: e => setProfile({ ...profile,\n                    work_email: e.target.value\n                  }),\n                  type: \"text\",\n                  label: \"Email\",\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(MailTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                multiple: true,\n                options: jobTypes,\n                getOptionLabel: option => option.label,\n                defaultValue: [jobTypes[1]],\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  value: profile.personal_email,\n                  onChange: e => setProfile({ ...profile,\n                    personal_email: e.target.value\n                  }),\n                  type: \"text\",\n                  label: \"Email\",\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(MailTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                startIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 67\n                }, this),\n                children: \"Add New Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                multiple: true,\n                options: jobTypes,\n                getOptionLabel: option => option.label,\n                defaultValue: [jobTypes[0]],\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Phone Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  value: profile.work_phone,\n                  onChange: e => {\n                    setProfile({ ...profile,\n                      work_phone: e.target.value\n                    });\n                  },\n                  type: \"text\",\n                  label: \"Phone Number\",\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(CallTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n                multiple: true,\n                options: jobTypes,\n                getOptionLabel: option => option.label,\n                defaultValue: [jobTypes[1]],\n                renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Phone Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  value: profile.personal_phone,\n                  onChange: e => {\n                    setProfile({ ...profile,\n                      personal_phone: e.target.value\n                    });\n                  },\n                  type: \"text\",\n                  label: \"Phone Number\",\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(CallTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"text\",\n                startIcon: /*#__PURE__*/_jsxDEV(ControlPointIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 67\n                }, this),\n                children: \"Add New Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Birthday\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  defaultValue: \"November 30, 1997\",\n                  type: \"text\",\n                  label: \"Birthday\",\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(TodayTwoToneIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Bio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                  defaultValue: profile.birthdayText,\n                  onChange: e => setProfile({ ...profile,\n                    birthdayText: e.target.value\n                  }),\n                  type: \"text\",\n                  label: \"Bio\",\n                  multiline: true,\n                  rows: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    className: classes.btnProfile,\n                    onClick: () => onSave(profile),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    className: classes.btnProfile,\n                    onClick: () => onCancel(profile),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(UserEdit, \"H06ap+9IzulzOUl/TxRhkOq/4Dk=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c2 = UserEdit;\nUserEdit.propTypes = {\n  user: PropTypes.object,\n  onCancel: PropTypes.func,\n  onSave: PropTypes.func\n};\nexport default UserEdit;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ElevationScroll\");\n$RefreshReg$(_c2, \"UserEdit\");","map":{"version":3,"sources":["/Users/maryannn28/Projects/PCH-Real-Estate/client/src/views/application/contact/UserEdit.js"],"names":["PropTypes","React","useEffect","useState","makeStyles","useTheme","Autocomplete","Avatar","Button","Divider","FormControl","Grid","IconButton","InputAdornment","InputLabel","OutlinedInput","TextField","Typography","useScrollTrigger","PerfectScrollbar","SubCard","gridSpacing","HighlightOffTwoToneIcon","BusinessTwoToneIcon","WorkTwoToneIcon","MailTwoToneIcon","CallTwoToneIcon","UploadTwoToneIcon","ControlPointIcon","TodayTwoToneIcon","User1","avatarImage","require","context","useStyles","root","width","maxWidth","btnProfile","input","opacity","position","zIndex","padding","cursor","ScrollHeight","height","overflowX","jobTypes","label","id","ElevationScroll","props","children","window","trigger","disableHysteresis","threshold","target","undefined","cloneElement","style","top","UserEdit","user","onCancel","onSave","others","classes","theme","profile","setProfile","avatarProfile","avatar","default","background","palette","mode","dark","main","grey","p","name","e","value","company","role","option","params","work_email","personal_email","work_phone","personal_phone","birthdayText","propTypes","object","func"],"mappings":"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","sourcesContent":["import * as PropTypes from 'prop-types';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n    Autocomplete,\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useScrollTrigger\r\n} from '@material-ui/core';\r\n\r\n// third-party\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport HighlightOffTwoToneIcon from '@material-ui/icons/HighlightOffTwoTone';\r\nimport BusinessTwoToneIcon from '@material-ui/icons/BusinessTwoTone';\r\nimport WorkTwoToneIcon from '@material-ui/icons/WorkTwoTone';\r\nimport MailTwoToneIcon from '@material-ui/icons/MailTwoTone';\r\nimport CallTwoToneIcon from '@material-ui/icons/CallTwoTone';\r\nimport UploadTwoToneIcon from '@material-ui/icons/UploadTwoTone';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport TodayTwoToneIcon from '@material-ui/icons/TodayTwoTone';\r\n\r\nimport User1 from 'assets/images/users/avatar-1.png';\r\n\r\nconst avatarImage = require.context('assets/images/users', true);\r\n\r\n// style constant\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '342px'\r\n    },\r\n    btnProfile: {\r\n        width: '100%'\r\n    },\r\n    input: {\r\n        opacity: 0,\r\n        position: 'fixed',\r\n        zIndex: 1,\r\n        padding: 0.5,\r\n        cursor: 'pointer'\r\n    },\r\n    ScrollHeight: {\r\n        height: 'calc(100vh - 83px)',\r\n        overflowX: 'hidden'\r\n    }\r\n});\r\n\r\nconst jobTypes = [\r\n    { label: 'Work', id: 1 },\r\n    { label: 'Personal', id: 2 }\r\n];\r\n\r\n// sticky edit card\r\nfunction ElevationScroll(props) {\r\n    const { children, window } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 130,\r\n        target: window ? window() : undefined\r\n    });\r\n\r\n    return React.cloneElement(children, {\r\n        style: {\r\n            position: trigger ? 'fixed' : 'relative',\r\n            top: trigger ? '83px' : '0',\r\n            width: trigger ? '318px' : '100%'\r\n        }\r\n    });\r\n}\r\n\r\n// ===========================|| CONTACT CARD/LIST USER EDIT ||=========================== //\r\n\r\nconst UserEdit = ({ user, onCancel, onSave, ...others }) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n\r\n    // save user to local state to update details and submit letter\r\n    const [profile, setProfile] = useState({});\r\n    useEffect(() => {\r\n        setProfile(user);\r\n    }, [user]);\r\n\r\n    let avatarProfile = User1;\r\n    if (profile) {\r\n        avatarProfile = profile.avatar && avatarImage(`./${profile.avatar}`).default;\r\n    }\r\n\r\n    return (\r\n        <ElevationScroll {...others}>\r\n            <div className={classes.root}>\r\n                <SubCard\r\n                    sx={{\r\n                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50]\r\n                    }}\r\n                    content={false}\r\n                >\r\n                    <PerfectScrollbar className={classes.ScrollHeight}>\r\n                        <Grid container spacing={gridSpacing} sx={{ p: 3 }}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container alignItems=\"center\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Avatar alt=\"User 3\" src={avatarProfile} sx={{ width: '64px', height: '64px' }} />\r\n                                    </Grid>\r\n                                    <Grid item xs zeroMinWidth>\r\n                                        <Grid container spacing={1}>\r\n                                            <Grid item xs={12}>\r\n                                                <label htmlFor=\"containedButtonFile\">\r\n                                                    <input\r\n                                                        accept=\"image/*\"\r\n                                                        className={classes.input}\r\n                                                        id=\"containedButtonFile\"\r\n                                                        multiple\r\n                                                        type=\"file\"\r\n                                                    />\r\n                                                    <Button variant=\"outlined\" size=\"small\" startIcon={<UploadTwoToneIcon />}>\r\n                                                        Upload\r\n                                                    </Button>\r\n                                                </label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <Typography variant=\"caption\">Image size should be 125kb Max.</Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <IconButton onClick={() => onCancel(profile)}>\r\n                                            <HighlightOffTwoToneIcon />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Divider />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Name</InputLabel>\r\n                                    <OutlinedInput\r\n                                        value={profile.name}\r\n                                        onChange={(e) => setProfile({ ...profile, name: e.target.value })}\r\n                                        type=\"text\"\r\n                                        label=\"Name\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <BusinessTwoToneIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Company</InputLabel>\r\n                                    <OutlinedInput\r\n                                        value={profile.company}\r\n                                        onChange={(e) => setProfile({ ...profile, company: e.target.value })}\r\n                                        type=\"text\"\r\n                                        label=\"Company\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <BusinessTwoToneIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Job Title</InputLabel>\r\n                                    <OutlinedInput\r\n                                        value={profile.role}\r\n                                        onChange={(e) => setProfile({ ...profile, role: e.target.value })}\r\n                                        type=\"text\"\r\n                                        label=\"Job Title\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <WorkTwoToneIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    options={jobTypes}\r\n                                    getOptionLabel={(option) => option.label}\r\n                                    defaultValue={[jobTypes[0]]}\r\n                                    renderInput={(params) => <TextField {...params} />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Email</InputLabel>\r\n                                    <OutlinedInput\r\n                                        value={profile.work_email}\r\n                                        onChange={(e) => setProfile({ ...profile, work_email: e.target.value })}\r\n                                        type=\"text\"\r\n                                        label=\"Email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <MailTwoToneIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    options={jobTypes}\r\n                                    getOptionLabel={(option) => option.label}\r\n                                    defaultValue={[jobTypes[1]]}\r\n                                    renderInput={(params) => <TextField {...params} />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Email</InputLabel>\r\n                                    <OutlinedInput\r\n                                        value={profile.personal_email}\r\n                                        onChange={(e) => setProfile({ ...profile, personal_email: e.target.value })}\r\n                                        type=\"text\"\r\n                                        label=\"Email\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <MailTwoToneIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"text\" startIcon={<ControlPointIcon />}>\r\n                                    Add New Email\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    options={jobTypes}\r\n                                    getOptionLabel={(option) => option.label}\r\n                                    defaultValue={[jobTypes[0]]}\r\n                                    renderInput={(params) => <TextField {...params} />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Phone Number</InputLabel>\r\n                                    <OutlinedInput\r\n                                        value={profile.work_phone}\r\n                                        onChange={(e) => {\r\n                                            setProfile({ ...profile, work_phone: e.target.value });\r\n                                        }}\r\n                                        type=\"text\"\r\n                                        label=\"Phone Number\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <CallTwoToneIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Autocomplete\r\n                                    multiple\r\n                                    options={jobTypes}\r\n                                    getOptionLabel={(option) => option.label}\r\n                                    defaultValue={[jobTypes[1]]}\r\n                                    renderInput={(params) => <TextField {...params} />}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Phone Number</InputLabel>\r\n                                    <OutlinedInput\r\n                                        value={profile.personal_phone}\r\n                                        onChange={(e) => {\r\n                                            setProfile({ ...profile, personal_phone: e.target.value });\r\n                                        }}\r\n                                        type=\"text\"\r\n                                        label=\"Phone Number\"\r\n                                        startAdornment={\r\n                                            <InputAdornment position=\"start\">\r\n                                                <CallTwoToneIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"text\" startIcon={<ControlPointIcon />}>\r\n                                    Add New Phone\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Birthday</InputLabel>\r\n                                    <OutlinedInput\r\n                                        defaultValue=\"November 30, 1997\"\r\n                                        type=\"text\"\r\n                                        label=\"Birthday\"\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <TodayTwoToneIcon />\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth>\r\n                                    <InputLabel>Bio</InputLabel>\r\n                                    <OutlinedInput\r\n                                        defaultValue={profile.birthdayText}\r\n                                        onChange={(e) => setProfile({ ...profile, birthdayText: e.target.value })}\r\n                                        type=\"text\"\r\n                                        label=\"Bio\"\r\n                                        multiline\r\n                                        rows={3}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Grid container spacing={1}>\r\n                                    <Grid item xs={6}>\r\n                                        <Button variant=\"contained\" className={classes.btnProfile} onClick={() => onSave(profile)}>\r\n                                            Save\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item xs={6}>\r\n                                        <Button variant=\"outlined\" className={classes.btnProfile} onClick={() => onCancel(profile)}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </PerfectScrollbar>\r\n                </SubCard>\r\n            </div>\r\n        </ElevationScroll>\r\n    );\r\n};\r\n\r\nUserEdit.propTypes = {\r\n    user: PropTypes.object,\r\n    onCancel: PropTypes.func,\r\n    onSave: PropTypes.func\r\n};\r\n\r\nexport default UserEdit;\r\n"]},"metadata":{},"sourceType":"module"}